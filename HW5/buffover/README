There are six C programs included. Four of the six C files are used in the lectures, including the following:`
	buffer1.c	
	layout.c
	overflow.c
	shellcode.c

The other two are one example on how to perform a buffer overflow attack. 
	exploitX.c
	stackX.c

The file stackX.c contains a shellcode and reads a file "badshellcodefile", which is generated by running exploitX.c. In exploitX.c, the memory address of the shellcode is required in order to generate an effective attack on stackX.c. The stackX.c prints out the memory address of shellcode, which is used by exploitX.c to generate the file "badshellcodefile". 

Compile the programs using the following commands:

	sudo sysclt -w kernel.randomize_va_space=0
	gcc -g -o exploitX -z execstack -fno-stack-protector exploitX.c
	gcc -g -o stackX -z execustack -fno-stack-protector stackX.c

Then run the programs:

	./exploitX

A file "badshellcode" file is generated. Then run

	./stackX

and find the output on the address of shellcode. Copy the value and replace the "ShellCodeAddress" value in exploitX.c. Compile exploitX.c again. Rerun "./exploitX" and then "./stackX", you should successfully drop into a shell.
